name: Deploy DotNet API to Azure Container App

# When this action will be executed
on:
#   # Automatically trigger it when detected changes in repo
#   push:
#     branches: 
#       [ master ]
#     paths:
#     - 'dotNetLearn/dockerfile/**'
#     - '.github/workflows/dotnetapi-AutoDeployTrigger-651f71af-a5b5-4147-a872-1b95cb6f7235.yml'

  # Allow mannually trigger 
  workflow_dispatch:      

jobs:
#   build:
#     runs-on: ubuntu-latest

#     steps:
#       - name: Checkout to the branch
#         uses: actions/checkout@v3

#       - name: Set up Docker Buildx
#         uses: docker/setup-buildx-action@v1

#       - name: Log in to container registry
#         uses: docker/login-action@v1
#         with:
#           registry: bccrandomchallenges.azurecr.io
#           username: ${{ secrets.DOTNETAPI_REGISTRY_USERNAME }}
#           password: ${{ secrets.DOTNETAPI_REGISTRY_PASSWORD }}

#       - name: Build and push container image to registry
#         uses: docker/build-push-action@v2
#         with:
#           push: true
#           tags: bccrandomchallenges.azurecr.io/dotnetapi:${{ github.sha }}
#           file: ./dotNetLearn/Dockerfile
#           context: ./dotNetLearn/


  deploy:
    runs-on: ubuntu-latest
#     needs: build
    
    steps:
      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.DOTNETAPI_AZURE_CREDENTIALS }}


      - name: Deploy to containerapp
        uses: azure/CLI@v1
        with:
          inlineScript: |
            az config set extension.use_dynamic_install=yes_without_prompt
            az containerapp registry set -n dotnetapi -g BCC-Challenges --server bccrandomchallenges.azurecr.io --username  ${{ secrets.DOTNETAPI_REGISTRY_USERNAME }} --password ${{ secrets.DOTNETAPI_REGISTRY_PASSWORD }}
            az containerapp update -n dotnetapi -g BCC-Challenges --image bccrandomchallenges.azurecr.io/dotnetapi:${{ github.sha }} --set-env-vars "DB_CONN_STR=secretref:pg-conn-str" --set-env-vars "FRONTEND_URL=https://storage.googleapis.com" --set-env-vars "ASPNETCORE_ENVIRONMENT=Development" --set-env-vars "PORT=80"
